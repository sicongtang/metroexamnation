var questList = new Array();
var resultList = new Array();
var seriesid = 0;
var singleQuestIdx = -1;
var multiQuestIdx = 0;
var generateIdList = new Array();

function refresh_quest(){
	document.location.reload();
}

function processNext(object){
	var items = object.value.split('_');
	var series_idx = items[0];
	var quest_idx = items[1];
	var answer_idx = items[2];
	
	var quest = new Object();
	quest.idx = quest_idx;
	quest.answer = answer_idx;
	
	resultLis[series_idx] = quest;
}

function transformAnswer(answerLetter, type){
	if(type == 'S'){
		if(answerLetter == 'A'){
			return '0';
		}else if(answerLetter == 'B'){
			return '1';
		}else if(answerLetter == 'C'){
			return '2';
		}else if(answerLetter == 'D'){
			return '3';
		}
	}else if(type == 'M'){
		var combined_answer = "";
		var items = answerLetter.split("");
		
		$.each(items, function(index, value) {
			if(value == 'A'){
				combined_answer += '0';
			}else if(value == 'B'){
				combined_answer += '1';
			}else if(value == 'C'){
				combined_answer += '2';
			}else if(value == 'D'){
				combined_answer += '3';
			}
		});
		
		return combined_answer;
	}
}

function collect_result(){
	var check_answer_array = new Array();
	
	$("input:radio").each(function() {
		var items = $(this).val().split('_');
		
		var series_idx = items[0];
		var quest_idx = items[1];
		var answer_idx = items[2];
		
		if(check_answer_array[quest_idx] == null) {
			check_answer_array[quest_idx] = new Object();
			check_answer_array[quest_idx].quest_idx = quest_idx;
			check_answer_array[quest_idx].type = 'S';
			check_answer_array[quest_idx].answer_idx = "";
			check_answer_array[quest_idx].unchecked_idx = "";
		}
		if($(this).is(':checked')) {
			check_answer_array[quest_idx].answer_idx += answer_idx;
		}else {
			check_answer_array[quest_idx].unchecked_idx += answer_idx;
		}
    });
	
	
	//collect checked items
	$("input:checkbox").each(function() {
		var items = $(this).val().split('_');
		
		var series_idx = items[0];
		var quest_idx = items[1];
		var answer_idx = items[2];
		
		if(check_answer_array[quest_idx] == null) {
			check_answer_array[quest_idx] = new Object();
			check_answer_array[quest_idx].quest_idx = quest_idx;
			check_answer_array[quest_idx].type = 'M';
			check_answer_array[quest_idx].answer_idx = "";
			check_answer_array[quest_idx].unchecked_idx = "";
		}
		if($(this).is(':checked')) {
			check_answer_array[quest_idx].answer_idx += answer_idx;
		}else {
			check_answer_array[quest_idx].unchecked_idx += answer_idx;
		}
    });
	
	//compare and show the result
	$.each(check_answer_array, function(index, value) {
		if(value != null){
			var quest_idx = value.quest_idx;
			var correct_answer_letter = questList[value.quest_idx].answer;
			var type = value.type;
			//alert(value.quest_idx + "=" + value.type + "=" + value.answer_idx + "=" + value.unchecked_idx);
			if(transformAnswer(correct_answer_letter,type) != value.answer_idx || value.unchecked_idx == '0123'){
				$("#hint_"+quest_idx).css("color","red")
				$("#hint_"+quest_idx).html("错误, 正确答案为:" + correct_answer_letter);
				$("#hint_"+quest_idx).show();
			}else {
				$("#hint_"+quest_idx).css("color","green")
				$("#hint_"+quest_idx).html("正确.");
				$("#hint_"+quest_idx).show();
			}
		}
	});
	
}

function fillHTML(quest){
	var questStrLine = "";
		
	questStrLine += "<div class='r-qu-body'>";
	questStrLine += "<div class='r-qu-body-title'>";
	if(quest.type == 'S'){
		questStrLine += "" + (seriesid + 1) + "、<p>"+quest.content+"</p>[单选题]";
	}else {
		questStrLine += "" + (seriesid + 1) + "、<p>"+quest.content+"</p>[多选题]";
	}
		
	questStrLine += "</div>";
	questStrLine += "<div class='r-qu-body-content'>";
	questStrLine += "<ul class='r-qu-body-ul1'>";
	
	$.each(quest.optionList, function(index, value) {
		questStrLine += "<li><ul class='quItem-ul'>";
		
		if(quest.type == 'S'){
			questStrLine += "<li><input type='radio' name='radio_"+quest.idx+"' value='"+seriesid+"_"+quest.idx+"_"+index+"' /></li>";
		}else {
			questStrLine += "<li><input type='checkbox' name='checkbox_"+quest.idx+"' value='"+seriesid+"_"+quest.idx+"_"+index+"' /></li>";
		}
		
		questStrLine += "<li class='quItemOptionName rd_ck'><p>"+value+"</p></li>";
		questStrLine += "</ul></li>";
	});
	
	//hint area
	questStrLine += "<li id='hint_"+quest.idx+"' style='display:none'></li>";
	
	questStrLine += "</ul>";
	questStrLine += "<div style='clear: both;'></div>";
	questStrLine += "<div class='quItemNote'></div>";
	questStrLine += "</div>";
	questStrLine += "</div>";
	
	seriesid++;
		
	$("#quest_content_id").append(questStrLine);
}

/**
 * Returns a random integer between min and max
 * Using Math.round() will give you a non-uniform distribution!
 */
function getRandomInt (min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}


$(document).ready(
		function() {

			function processClick(object){
				alert(object.name);
				alert(object.value);
			}
			
			function readTextFile(quest_type, execLoad) {
				var sourcepath = "";
				if(quest_type == 'S'){
					sourcepath = "source/question_single.txt";
				}else if(quest_type == 'M'){
					sourcepath = "source/question_multiple.txt";
				}
				var rawFile = new XMLHttpRequest();
				rawFile.open("GET", sourcepath, true);
				rawFile.onreadystatechange = function() {
					if (rawFile.readyState === 4) {
						var allText = rawFile.responseText;
						var line = allText.split('\n');
						$.each(line, function(index, value) {
							var items = value.split('|');
							var quest = new Object();
							quest.idx = questList.length;
							quest.type = items[0];
							quest.content = items[1];
							quest.answer = items[2];
							
							var optionList = new Array();
							
							optionList.push(items[3]);
							optionList.push(items[4]);
							optionList.push(items[5]);
							optionList.push(items[6]);
							
							quest.optionList = optionList;
							
							questList.push(quest);
							
							if(quest_type == 'S'){
								singleQuestIdx++;
							}else if (quest_type == 'M'){
								if(multiQuestIdx == 0) {
									multiQuestIdx = singleQuestIdx + 1;
								}else {
									multiQuestIdx++;
								}
							}
						});

						if(execLoad == true){
							//alert(singleQuestIdx + "=" + multiQuestIdx);
							
							
							//generate 20 single question
							for(var i=0;i<20;i++){
								var generateId;
								while(true){
									generateId = getRandomInt(0, singleQuestIdx);
									if(generateIdList[generateId] == null){
										generateIdList[generateId] = generateId;
										break;
									}
								}
								fillHTML(questList[generateId]);
							}
							//generate 10 multiple question
							for(var i=0;i<10;i++){
								var generateId;
								while(true){
									generateId = getRandomInt(singleQuestIdx+1, multiQuestIdx);
									if(generateIdList[generateId] == null){
										generateIdList[generateId] = generateId;
										break;
									}
								}
								fillHTML(questList[generateId]);
							}
							
						}
					}
				}

				rawFile.send();
			}
			
			readTextFile("S",false);
			readTextFile("M",true);
		});



